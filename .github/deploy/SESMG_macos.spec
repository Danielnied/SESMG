# -*- mode: python ; coding: utf-8 -*-
from PyInstaller.utils.hooks import copy_metadata

datas = [('../../lib/Python3.9/site-packages/streamlit', 'streamlit'),
         ('../../program_files', 'program_files'),
         ('../../lib/Python3.9/site-packages/dhnx', 'dhnx'),
         ('../../lib/python3.9/site-packages/demandlib/bdew/bdew_data', 'demandlib/bdew/bdew_data'),
         ('../../lib/python3.9/site-packages/pvlib/data', 'pvlib/data'),
         ('../../lib/python3.9/site-packages/pyomo', 'pyomo'),
	 ('../../lib/python3.9/site-packages/st_aggrid', 'st_aggrid'),
	 ('../../lib/python3.9/site-packages/oemof', 'oemof'),
	 ('../../lib/python3.9/site-packages/feedinlib', 'feedinlib'),
	 ('../../lib/python3.9/site-packages/xarray', 'xarray'),
	 ('../../lib/python3.9/site-packages/cdsapi', 'cdsapi'),
         ('../../lib/python3.9/site-packages/tqdm', 'tqdm'),
	 ('../../lib/python3.9/site-packages/oedialect', 'oedialect'),
         ('../../lib/python3.9/site-packages/geoalchemy2', 'geoalchemy2'),
	 ('../../lib/python3.9/site-packages/sqlalchemy', 'sqlalchemy'),
         ('../../lib/python3.9/site-packages/alembic', 'alembic'),
         ('../../lib/python3.9/site-packages/mako', 'mako'),
	 ('../../lib/python3.9/site-packages/geocoder', 'geocoder'),
	 ('../../lib/python3.9/site-packages/ratelim', 'ratelim'),
	 ('../../lib/python3.9/site-packages/pyutilib', 'pyutilib'),
	 ('../../lib/python3.9/site-packages/ply', 'ply'),
         ('../../lib/python3.9/site-packages/dill', 'dill'),
         ('../../lib/python3.9/site-packages/networkx', 'networkx'),
         ('../../lib/python3.9/site-packages/addict', 'addict'),
         ('../../lib/python3.9/site-packages/folium', 'folium'),
	 ('../../lib/python3.9/site-packages/branca', 'branca'),
	 ('../../lib/python3.9/site-packages/sympy', 'sympy'),
	 ('../../lib/python3.9/site-packages/mpmath', 'mpmath'),
         ('../../lib/python3.9/site-packages/pvlib', 'pvlib'),
         ('../../lib/python3.9/site-packages/windpowerlib', 'windpowerlib'),
         ('../../lib/python3.9/site-packages/open_FRED', 'open_FRED'),
	 ('../../lib/python3.9/site-packages/xlsxwriter', 'xlsxwriter'),
	 ('../../lib/python3.9/site-packages/graphviz', 'graphviz'),
	 ('../../lib/python3.9/site-packages/*.py', '.'),
         ('../../docs', 'docs'),
         ('../../README.md', '.'),
         ]
datas += copy_metadata('streamlit')


block_cipher = None


a = Analysis(
    ['../../program_files/start_script.py'],
    pathex=['lib/Python3.9/site-packages'],
    binaries=[],
    datas=datas,
    hiddenimports=["program_files",
		   "PySide6",
		   "sqlalchemy.dialects",
		   "shapely._geos",
		   "matplotlib",
	           "matplotlib.pyplot",
		   "matplotlib.backend_bases",
		   "matplotlib.figure",
                   "numbers",
                   "pyomo",
                   "pyomo.environ",
                   "pyomo.core",
                   "pyomo.core.plugins",
                   "pyomo.core.kernel.component_set",
                   "pyomo.core.kernel.component_map",
                   "pyomo.core.base.suffix",
                   "pyomo.core.base.var",
                   "pyomo.core.base.PyomoModel",
                   "pyomo.core.base.block",
                   "pyomo.core.kernel.block",
                   "pyomo.core.kernel.suffix",
                   "pyomo.common",
                   "pyomo.common.plugins",
                   "pyomo.opt",
                   'pyomo.opt.plugins',
                   "pyomo.opt.results.results_",
                   "pyomo.opt.results.solution",
                   "pyomo.opt.results.solver",
                   "pyomo.opt.base",
                   'pyomo.opt.base.solvers',
                   "pyomo.opt.base.problem",
                   "pyomo.opt.base.convert",
                   "pyomo.opt.base.formats",
                   "pyomo.opt.base.results",
                   "pyomo.contrib",
                   'pyomo.dataportal',
                   'pyomo.dataportal.plugins',
                   'pyomo.duality',
                   'pyomo.duality.plugins',
                   'pyomo.checker',
                   'pyomo.checker.plugins',
                   'pyomo.repn',
                   'pyomo.repn.plugins',
                   'pyomo.repn.util',
                   'pyomo.pysp',
                   'pyomo.pysp.plugins',
                   'pyomo.neos',
                   'pyomo.neos.plugins',
                   "pyomo.gdp",
                   'pyomo.gdp.plugins',
                   'pyomo.mpec',
                   'pyomo.mpec.plugins',
                   'pyomo.dae',
                   'pyomo.dae.plugins',
                   'pyomo.bilevel',
                   'pyomo.bilevel.plugins',
                   'pyomo.scripting',
                   'pyomo.scripting.plugins',
                   'pyomo.network',
                   'pyomo.network.plugins',
                   "pyomo.kernel",
                   'gurobipy',
                   'pyomo.solvers.plugins',
                   'pyomo.solvers.plugins.solvers',
                   'pyomo.solvers.plugins.solvers.direct_solver',
                   'pyomo.solvers.plugins.solvers.direct_or_persistent_solver',
                   "pyomo.solvers.plugins.solvers.persistent_solver",
                   "pyomo.solvers.plugins.solvers.CBCplugin",
                   "pyomo.solvers.plugins.solvers.GUROBI_RUN",
                   'pyomo.solvers',
                   'pyomo.util',
                   "pyomo.core.expr.numvalue",
                   'st_aggrid'],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)
pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='SESMG',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)
app = BUNDLE(
    exe,
    name='SESMG.app',
    icon='SESMG.ico',
    bundle_identifier=None,
)
